name: .NET

on:
  push:
    branches: ["main"]

jobs:
  build-and-tests:
    runs-on: ubuntu-latest
    name: Build & Tests
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test with coverage
        run: |
          dotnet tool install -g coverlet.console
          dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=./TestResults/

      - name: Display files in TestResults directory
        run: ls -R ./TestResults/

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./TestResults/coverage.opencover.xml

  build-and-publish-image:
    runs-on: ubuntu-latest
    needs: build-and-tests
    name: Publish Docker Hub
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username $DOCKER_USER --password-stdin
          mkdir -p ~/.docker
          cat <<EOF > ~/.docker/config.json
          {
            "auths": {
              "https://index.docker.io/v1/": {
                "auth": "$(echo -n $DOCKER_USER:$DOCKER_PASSWORD | base64)"
              }
            },
            "credsStore": "secretservice"
          }
          EOF
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build the Docker image with timestamp tag
        run: |
          IMAGE_TAG=wesleycosta/power-up-challenge:$(date +'%Y%m%d%H%M%S')
          docker build . --file Dockerfile --tag $IMAGE_TAG
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Docker Push
        run: docker push ${{ env.IMAGE_TAG }}
