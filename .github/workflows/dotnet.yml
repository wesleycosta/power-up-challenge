name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-tests:
    runs-on: ubuntu-latest
    name: Build & Tests
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
      
    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build-and-publish-image:
    runs-on: ubuntu-latest
    needs: build-and-tests
    name: Publish Docker Hub
    steps:
    - uses: actions/checkout@v2
    
    - name: Login to Docker Hub
      run: |
        echo "${DOCKER_PASSWORD}" | docker login --username $DOCKER_USER --password-stdin
        mkdir -p ~/.docker
        cat <<EOF > ~/.docker/config.json
        {
          "auths": {
            "https://index.docker.io/v1/": {
              "auth": "$(echo -n $DOCKER_USER:$DOCKER_PASSWORD | base64)"
            }
          },
          "credsStore": "secretservice"
        }
        EOF
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build the Docker image
      run: |
        IMAGE_TAG=wesleycosta/power-up-challenge:$(date +%s)
        docker build . --file Dockerfile --tag $IMAGE_TAG
        echo "::set-output name=image_tag::$IMAGE_TAG"

    - name: Docker Push
      run: docker push ${{ needs.build-and-publish-image.outputs.image_tag }}

