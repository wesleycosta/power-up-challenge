name: power-up-challenge

trigger:
- main  # Substitua pelo branch desejado

pool:
  vmImage: 'windows-latest'  # Escolha a imagem apropriada

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  dockerRegistryServiceConnection: 'nome-da-conexao-do-servico-dockerhub'  # Substitua pelo nome da conexão do Docker Hub no Azure Pipelines

stages:
- stage: Build
  jobs:
  - job: Build
    displayName: 'Build and Test'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '3.x'  # Substitua pela versão desejada do SDK .NET

    - task: NuGetToolInstaller@1
      inputs:
        version: 'latest'

    - script: dotnet restore $(solution)
      displayName: 'Restore'

    - script: dotnet build $(solution) --configuration $(buildConfiguration) --no-restore
      displayName: 'Build'

    - script: dotnet test $(solution) --configuration $(buildConfiguration) --no-build
      displayName: 'Run Tests'

- stage: Publish
  jobs:
  - job: Publish
    displayName: 'Publish Docker Image'
    steps:
    - task: Docker@2
      displayName: 'Build and Push Docker Image'
      inputs:
        command: 'buildAndPush'
        repository: 'sua-conta-dockerhub/nome-do-repositorio'
        dockerfile: '**/Dockerfile'
        buildContext: '.'
        tags: '$(Build.BuildId)'
        containerRegistry: 'DockerHubConnection'  # Substitua pelo nome da conexão do Docker Hub no Azure Pipelines
